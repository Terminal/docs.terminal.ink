{"version":3,"sources":["webpack:///./src/proptypes.js","webpack:///./src/templates/docs.js"],"names":["ItemPropType","PropTypes","shape","frontmatter","nsfw","bool","pagename","string","application_id","server_id","avatar","description","link","support","github","owner","repo","fields","permalink","filelink","locale","template","filename","html","Docs","render","react_default","a","createElement","DocsLayout","this","props","pageContext","Global","title","data","markdownRemark","dangerouslySetInnerHTML","__html","React","Component","pageQuery","propTypes"],"mappings":"qJAEaA,EAAeC,IAAUC,MAAM,CAC1CC,YAAaF,IAAUC,MAAM,CAC3BE,KAAMH,IAAUI,KAChBC,SAAUL,IAAUM,OACpBC,eAAgBP,IAAUM,OAC1BE,UAAWR,IAAUM,OACrBG,OAAQT,IAAUM,OAClBI,YAAaV,IAAUM,OACvBK,KAAMX,IAAUM,OAChBM,QAASZ,IAAUM,OACnBO,OAAQb,IAAUC,MAAM,CACtBa,MAAOd,IAAUM,OACjBS,KAAMf,IAAUM,WAGpBU,OAAQhB,IAAUC,MAAM,CACtBgB,UAAWjB,IAAUM,OACrBY,SAAUlB,IAAUM,OACpBa,OAAQnB,IAAUM,OAClBc,SAAUpB,IAAUM,OACpBe,SAAUrB,IAAUM,SAEtBgB,KAAMtB,IAAUM,8ECfZiB,4FACJC,kBACE,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYT,OAAQU,KAAKC,MAAMC,YAAYZ,QACzCM,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAQC,MAAOJ,KAAKC,MAAMI,KAAKC,eAAejC,YAAYG,SAAUK,YAAamB,KAAKC,MAAMI,KAAKC,eAAejC,YAAYQ,cAC5He,EAAAC,EAAAC,cAAA,OAAKS,wBAAyB,CAAEC,OAAQR,KAAKC,MAAMI,KAAKC,eAAeb,aAL5DgB,IAAMC,WAWZC,EAAS,aActBjB,EAAKkB,UAAY,CACfP,KAAMlC,IAAUC,MAAM,CACpBkC,eAAgBpC,IAElBgC,YAAa/B,IAAUC,MAAM,CAC3BkB,OAAQnB,IAAUM,UAIPiB","file":"component---src-templates-docs-js-a609af5ab13c43521ce5.js","sourcesContent":["import PropTypes from 'prop-types';\n\nexport const ItemPropType = PropTypes.shape({\n  frontmatter: PropTypes.shape({\n    nsfw: PropTypes.bool,\n    pagename: PropTypes.string,\n    application_id: PropTypes.string,\n    server_id: PropTypes.string,\n    avatar: PropTypes.string,\n    description: PropTypes.string,\n    link: PropTypes.string,\n    support: PropTypes.string,\n    github: PropTypes.shape({\n      owner: PropTypes.string,\n      repo: PropTypes.string\n    })\n  }),\n  fields: PropTypes.shape({\n    permalink: PropTypes.string,\n    filelink: PropTypes.string,\n    locale: PropTypes.string,\n    template: PropTypes.string,\n    filename: PropTypes.string\n  }),\n  html: PropTypes.string\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ItemPropType } from './../proptypes';\nimport Global from './../components/Global';\nimport DocsLayout from './../components/DocsLayout';\nimport { graphql } from 'gatsby';\n\nimport './docs.scss';\n\nclass Docs extends React.Component {\n  render() {\n    return (\n      <DocsLayout locale={this.props.pageContext.locale}>\n        <Global title={this.props.data.markdownRemark.frontmatter.pagename} description={this.props.data.markdownRemark.frontmatter.description}/>\n        <div dangerouslySetInnerHTML={{ __html: this.props.data.markdownRemark.html }}></div>\n      </DocsLayout>\n    );\n  }\n}\n\nexport const pageQuery = graphql`\n  query docsPages($permalink: String!) {\n    markdownRemark(fields: { permalink: { eq: $permalink }}) {\n      html\n      frontmatter {\n        pagename\n      }\n      fields {\n        filename\n      }\n    }\n  }\n`;\n\nDocs.propTypes = {\n  data: PropTypes.shape({\n    markdownRemark: ItemPropType\n  }),\n  pageContext: PropTypes.shape({\n    locale: PropTypes.string\n  })\n};\n\nexport default Docs;\n"],"sourceRoot":""}