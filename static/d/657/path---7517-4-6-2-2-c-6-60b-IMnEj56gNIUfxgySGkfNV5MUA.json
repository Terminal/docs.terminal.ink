{"data":{"markdownRemark":{"html":"<h2>4.6.2.1 Classification of programming languages</h2>\n<p>Programming languages can be divided into 4 main generations</p>\n<ol>\n<li>First generation machine code</li>\n<li>Second generation assembly code</li>\n<li>Third generation \"imperitive\" language code</li>\n<li>Fourth level \"declarative\" language code</li>\n</ol>\n<h3>First Generation</h3>\n<div class=\"to-vscode\" data-language=\"markdown\">\n# x86 Compliant \"Hello World\" program\n# (Ctrl+Click to follow link)\n# https://codegolf.stackexchange.com/a/5741\n<p>7F 45 4C 46 01 01 01 00 00 00 00 00 00 00 00 00\n02 00 03 00 01 00 00 00 35 40 B3 04 2C 00 00 00\n00 00 00 00 00 00 00 00 34 00 20 00 01 00 00 00\n00 00 00 00 00 40 B3 04 B2 0C EB 1C 62 00 00 00\n62 00 00 00 05 00 00 00 00 10 00 00 48 65 6C 6C\n6F 20 77 6F 72 6C 64 0A B9 4C 40 B3 04 93 CD 80\nEB FB</p>\n</div>\n<h3>Second Generation</h3>\n<div class=\"to-vscode\" data-language=\"markdown\">\n# x86 Compliant \"Hello World\" program\n# (Ctrl+Click to follow link)\n# https://codegolf.stackexchange.com/a/5741\n<pre><code>        org     0x04B34000\n        db      0x7F, \"ELF\", 1, 1, 1, 0 ; e_ident\n        dd      0, 0\n        dw      2                       ; e_type\n        dw      3                       ; e_machine\n        dd      1                       ; e_version\n        dd      _start                  ; e_entry\n        dd      phdr - $$               ; e_phoff\n        dd      0                       ; e_shoff\n        dd      0                       ; e_flags\n        dw      0x34                    ; e_ehsize\n        dw      0x20                    ; e_phentsize\n</code></pre>\n<p>phdr:       dd      1                       ; e<em>phnum       ; p</em>type\n; e<em>shentsize\ndd      0                       ; e</em>shnum       ; p<em>offset\n; e</em>shstrndx\ndb      0                                       ; p<em>vaddr\n_start:     inc     eax\nmov     bl, 4\nmov     dl, 12                                  ; p</em>paddr\njmp     short part2\ndd      filesize                                ; p<em>filesz\ndd      filesize                                ; p</em>memsz\ndd      5                                       ; p<em>flags\ndd      0x1000                                  ; p</em>align\nstr:        db      'Hello world', 10\npart2:      mov     ecx, str\nagain:      xchg    eax, ebx\nint     0x80\njmp     short again\nfilesize    equ     $ - $$</p>\n</div>\n<h3>Third Generation</h3>\n<div class=\"to-vscode\" data-language=\"java\">\n// Some random Java.\n// https://github.com/comp500/mkwii-presence-java\n<p>package link.infra.mkwiipresence;</p>\n<p>import java.awt.EventQueue;</p>\n<p>import javax.swing.JOptionPane;\nimport javax.swing.UIManager;\nimport javax.swing.UnsupportedLookAndFeelException;</p>\n<p>import link.infra.mkwiipresence.WiimmMessages.WiimmMessage;\nimport link.infra.mkwiipresence.WiimmMessages.WiimmRoom;</p>\n<p>public class MKWiiPresence {\npublic PresenceSettings currentSettings = new PresenceSettings();\npublic MKWiiPresenceGUI guiInstance;\npublic PresenceUpdater presenceUpdater;\n<br>\npublic static void main(String[] args) {\nSystem.out.println(\"hi\");\nnew MKWiiPresence();\n}\n<br>\npublic MKWiiPresence() {\n// is this a bad idea?\nMKWiiPresence reference = this;\nEventQueue.invokeLater(new Runnable() {\npublic void run() {\ntry {\ntry {\nUIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());\n} catch (ClassNotFoundException | InstantiationException | IllegalAccessException\n| UnsupportedLookAndFeelException e) {\ne.printStackTrace();\n}\npresenceUpdater = new PresenceUpdater();\nguiInstance = new MKWiiPresenceGUI(reference);\n} catch (Exception e) {\ne.printStackTrace();\n}\n}\n});\n}\n<br>\npublic void showError(Exception e) {\ne.printStackTrace();\nJOptionPane.showMessageDialog(null, \"Exception thrown: \\n\" + e.getMessage(), \"There was a problem.\", JOptionPane.ERROR<em>MESSAGE);\n}\n<br>\npublic boolean processResponse(String json) {\nWiimmMessage[] messages = WiimmMessages.deserialize(json);\nboolean wasUpdated = false;\nfor (int i = 0; i &#x3C; messages.length; i++) {\nSystem.out.println(messages[i].messageType);\nif (messages[i] instanceof WiimmRoom) {\npresenceUpdater.update(new PresenceMessage((WiimmRoom) messages[i], currentSettings));\nwasUpdated = true;\n}\n}\nif (!wasUpdated) {\n// Update presence with previous (cached) info\n// TODO remove testing code\n//presenceUpdater.update(null);\n}\nreturn wasUpdated;\n}\n<br>\npublic void setCurrentSettings(PresenceSettings settings) {\nthis.currentSettings = settings;\n}\n<br>\npublic void requestNewPresence() {\nif (currentSettings.friendCode != null &#x26;&#x26; currentSettings.friendCode.length() == 14) {\nString friendCodeNumbers = currentSettings.friendCode.replace(\"-\", \"\");\nint playerId;\ntry {\nlong friendCode = Long.parseLong(friendCodeNumbers);\nplayerId = WiimmRequester.convertFriendCodeToPID(friendCode);\n} catch (Exception e) {\nJOptionPane.showMessageDialog(null, \"Invalid friend code\", \"There was a problem.\", JOptionPane.ERROR</em>MESSAGE);\nreturn;\n}\nSystem.out.println(playerId);\ntry {\nString json = WiimmRequester.requestRoomInfo(playerId);\nif (processResponse(json)) {\n// Set status to done\n} else {\n// Set status depending on whether cache was used/available\n}\n} catch (Exception e) {\nshowError(e);\n}\n} else {\nJOptionPane.showMessageDialog(null, \"Invalid friend code\", \"There was a problem.\", JOptionPane.ERROR_MESSAGE);\n}\n}\n}</p>\n</div>\n<h3>Fourth Generation</h3>\n<div class=\"to-vscode\" data-language=\"html\">\n&lt;html&gt;\n    &lt;head&gt;\n        &lt;title&gt;My excellent website&lt;/title&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n        &lt;h1&gt;My excellent website&lt;/h1&gt;\n        &lt;p&gt;I am the best person to ever live. Like ever.&lt;/p&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</div>","frontmatter":{"pagename":"4.6.2 Classification of programming languages"},"fields":{"filename":"4-6-2"}}},"pageContext":{"permalink":"/7517/4-6-2"}}