{"data":{"markdownRemark":{"html":"<h2>4.6.5.1 Using Boolean Algebra</h2>\n<h3>Addition</h3>\n<p>Boolean numbers can be added together.\nThis is equivalent to an OR gate.</p>\n<table>\n<thead>\n<tr>\n<th>A</th>\n<th>B</th>\n<th>Q</th>\n<th>Algebra</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n<td>\\(0 + 0 = 0\\)</td>\n</tr>\n<tr>\n<td>0</td>\n<td>1</td>\n<td>1</td>\n<td>\\(0 + 1 = 1\\)</td>\n</tr>\n<tr>\n<td>1</td>\n<td>0</td>\n<td>1</td>\n<td>\\(1 + 0 = 1\\)</td>\n</tr>\n<tr>\n<td>1</td>\n<td>1</td>\n<td>1</td>\n<td>\\(1 + 1 = 1\\)</td>\n</tr>\n</tbody>\n</table>\n<p>In boolean algebra, since you cannot have 2, adding two numbers will stop at 1.</p>\n<h3>Multiplication</h3>\n<p>Boolean numbers can also be multiplied together.\nThis is equivalent to an AND gate.</p>\n<table>\n<thead>\n<tr>\n<th>A</th>\n<th>B</th>\n<th>Q</th>\n<th>Algebra</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n<td>\\(0 \\times 0 = 0\\)</td>\n</tr>\n<tr>\n<td>0</td>\n<td>1</td>\n<td>0</td>\n<td>\\(0 \\times 1 = 0\\)</td>\n</tr>\n<tr>\n<td>1</td>\n<td>0</td>\n<td>0</td>\n<td>\\(1 \\times 0 = 0\\)</td>\n</tr>\n<tr>\n<td>1</td>\n<td>1</td>\n<td>1</td>\n<td>\\(1 \\times 1 = 1\\)</td>\n</tr>\n</tbody>\n</table>\n<p>Note that 1 multiplied by 0 in both decimal and binary algebra is 0.\nLater on, the multiplication symbol will be replaced with a dot.</p>\n<h3>Complement</h3>\n<p>Boolean numbers can be inverted.\nThis is equivalent to a NOT gate.</p>\n<table>\n<thead>\n<tr>\n<th>A</th>\n<th>Q</th>\n<th>Algebra</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>0</td>\n<td>1</td>\n<td>\\(\\overline 0 = 1\\)</td>\n</tr>\n<tr>\n<td>1</td>\n<td>0</td>\n<td>\\(\\overline 1 = 0\\)</td>\n</tr>\n</tbody>\n</table>\n<h3>Identities</h3>\n<p>Combining these above algebraic formulae can cause complex equations to arise.\nSometimes, these needs to be simplified, as reducing the number of gates required saves space, cost and time producing circuits.</p>\n<p>Unfortunately, there's quite a few to remember.</p>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>AND form</th>\n<th>OR form</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Identity</td>\n<td>\\(A.1 = A\\)</td>\n<td>\\(A+0 = A\\)</td>\n</tr>\n<tr>\n<td>Null (or Dominance) Law</td>\n<td>\\(A.0 = 0\\)</td>\n<td>\\(A+1 = 1\\)</td>\n</tr>\n<tr>\n<td>Idempotence Law</td>\n<td>\\(A.A = A\\)</td>\n<td>\\(A+A = A\\)</td>\n</tr>\n<tr>\n<td>Inverse Law</td>\n<td>\\(A.\\overline A = 0\\)</td>\n<td>\\(A+\\overline A = 1\\)</td>\n</tr>\n<tr>\n<td>Commutative Law</td>\n<td>\\(A.B = B.A\\)</td>\n<td>\\(A+B = B+A\\)</td>\n</tr>\n<tr>\n<td>Associative Law</td>\n<td>\\((A.B).C = A.(B.C)\\)</td>\n<td>\\((A+B)+C = A+(B+C)\\)</td>\n</tr>\n<tr>\n<td>Distributive Law</td>\n<td>\\(A+(B.C) = (A+B).(A+C)\\)</td>\n<td>\\(A.(B+C) = (A.B)+(A.C)\\)</td>\n</tr>\n<tr>\n<td>Absorption Law</td>\n<td>\\(A.(A+B) = A\\)</td>\n<td>\\(A+(A.B) = A\\)</td>\n</tr>\n<tr>\n<td>De Morgan's Law</td>\n<td>\\(\\overline{(A.B)} = \\overline A + \\overline B\\)</td>\n<td>\\(\\overline{(A+B)} = \\overline A . \\overline B\\)</td>\n</tr>\n<tr>\n<td>Double Complement Law</td>\n<td></td>\n<td>\\(\\overline{\\overline A} = A\\)</td>\n</tr>\n</tbody>\n</table>\n<h1>Questions</h1>\n<p><a href=\"answers#465-boolean-algebra\">Answer</a></p>\n<ol>\n<li>Simplify \\(\\overline{(\\overline A+B)}+\\overline{(\\overline A+C)}\\)</li>\n</ol>","frontmatter":{"pagename":"4.6.5 Boolean Algebra"},"fields":{"filename":"section-4.6.5"}}},"pageContext":{"permalink":"/7517/section-4.6.5"}}