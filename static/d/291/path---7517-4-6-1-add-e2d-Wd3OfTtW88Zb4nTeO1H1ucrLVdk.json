{"data":{"markdownRemark":{"html":"<h2>4.6.1.1 Relationship between hardware and software</h2>\n<p>A computer system is made up of two parts:</p>\n<ul>\n<li>Hardware</li>\n<li>Software</li>\n</ul>\n<p>Hardware is something that can be physically picked up/touched.\nSoftware is the applications and programming instructions which tell your hardware what to do.</p>\n<p>Without software, hardware is very limited.\nWithout hardware, software is next to useless.</p>\n<p>Only with both, can the potential be fully realised.</p>\n<h3>What to consider when buying new software?</h3>\n<ul>\n<li>What sort of tasks will the software be used for?</li>\n<li>How much does the software cost and how much money is available to buy it?</li>\n<li>What operating system does the software need? Software will only work on the operating system it was designed for</li>\n<li>\n<p>What are the minimum system requirements for the software?</p>\n<ul>\n<li>Every application package has a minimum set of hardware requirements such as how much hard disk space and memory are needed</li>\n</ul>\n</li>\n<li>\n<p>Will the software be used on a single computer or on a network?</p>\n<ul>\n<li>If the software is going to be used on a network, a special version of it may be needed</li>\n</ul>\n</li>\n<li>\n<p>How much support is available for users?</p>\n<ul>\n<li>Online help</li>\n<li>Telephone support</li>\n<li>Internet Sites</li>\n<li>Printed Manuals</li>\n</ul>\n</li>\n<li>\n<p>How easy is it to install?</p>\n<ul>\n<li>Can an ordinary person run this or will an IT expert be needed to do it?</li>\n</ul>\n</li>\n</ul>\n<h2>4.6.1.2 Classification of software</h2>\n<p>There are two types of software</p>\n<ul>\n<li>System Software</li>\n<li>Application Software</li>\n</ul>\n<p>System software is the operating system, utility programs and drivers.\nIt is effectively the 'software platform' for application software.</p>\n<p>Application software is our \"every day\" software such as a word processing program, graphics maniplulation programs and web browsers.</p>\n<h3>Application Software</h3>\n<p>Application software runs 'on top' of the system software that supports it.\nFor example, a game may use OpenGL to send instructions to the display drivers to display an image.\nTypes of application software include:</p>\n<ul>\n<li>\n<p>General purpose application software</p>\n<ul>\n<li>Software that is not written for any particular type of business</li>\n<li>Word Processors</li>\n<li>Spreadsheet Programs</li>\n<li>It is relatively cheap</li>\n<li>Readily available</li>\n<li>Great support</li>\n<li>Less bugs as more people have tested the software</li>\n</ul>\n</li>\n<li>\n<p>Special purpose application software</p>\n<ul>\n<li>Software written for a defined purpose</li>\n<li>Accountancy software</li>\n<li>SIMS</li>\n</ul>\n</li>\n<li>\n<p>Bespoke application software</p>\n<ul>\n<li>Written when a company requires a piece of software to peform a very specific task</li>\n<li>Website backend</li>\n<li>Expensive to develop</li>\n<li>Hard to debug</li>\n<li>Does not have un-necessary parts</li>\n<li>Once it's working, they own the rights to it</li>\n</ul>\n</li>\n</ul>\n<h3>System Software</h3>\n<p>There are many types of system software</p>\n<ul>\n<li>\n<p>Operating System</p>\n<ul>\n<li>User interface</li>\n<li>Kernel</li>\n<li>Device Drivers</li>\n<li>System Utilities</li>\n</ul>\n</li>\n</ul>\n<h3>Operating System</h3>\n<p>The operating system provides an interface between the user and the hardware.\nThey are said to provide \"a virtual machine\" which hides the complexities of the hardware from the user.\nThe user doesn't need to understand where about on the disk a file is being saved to. Just that they have clicked the <code>save</code> button. The OS does the rest.</p>\n<p>Operating systems run some of these tasks:</p>\n<ul>\n<li>\n<p>Interface</p>\n<ul>\n<li>Provides a user interface so it is easy to interact with the computer</li>\n</ul>\n</li>\n<li>\n<p>Manages the CPU</p>\n<ul>\n<li>Runs applications and executes and cancels processes</li>\n</ul>\n</li>\n<li>\n<p>Multi-tasks</p>\n<ul>\n<li>Allows multiple applications to run simultaneously</li>\n</ul>\n</li>\n<li>\n<p>Manages Memory</p>\n<ul>\n<li>Transfers programs into and out of memory</li>\n<li>Allocates free space between programs</li>\n<li>Manages virtual memory</li>\n</ul>\n</li>\n<li>\n<p>Manages peripherals</p>\n<ul>\n<li>Opens, closes and writes to peripheral devices such as external storage</li>\n</ul>\n</li>\n<li>\n<p>Organises</p>\n<ul>\n<li>Creates a file system to organise files and directories</li>\n</ul>\n</li>\n<li>\n<p>Security</p>\n<ul>\n<li>Provides security through user accounts and passwords</li>\n</ul>\n</li>\n<li>\n<p>Utilities</p>\n<ul>\n<li>Provides tools for managing and organising hardware</li>\n</ul>\n</li>\n</ul>\n<h2>4.6.1.4 Role of an operating system</h2>\n<h3>Kernel</h3>\n<p>The kernel is a computer program that is the core of a computer's operating system, with complete control over everything in the system.\nIt is the first program loaded on start-up.\nIt handles the rest of start-up as well as IO requests from software, translating them into data-processing instructions for the Central Processing Unit. It handles memory and peripherals like keyboards, monitors, printers, speakers.</p>\n<h3>Memory Manager</h3>\n<p>The OS allocates memory between the different programs that are open at the same time.\nProgrammers and users do not need to know where in memory data is held - It is the purpose of the operating system to do this.</p>\n<p>The memory manager gives each program a private memory area in which to run\nIt is also responsible for moving programs between RAM and virtual memory.</p>\n<h3>Managing CPU time</h3>\n<p>The CPU may only have 1 core. In order to allow multi-tasking, the OS shares time between processes to create the illusion of multi-tasking</p>\n<h3>Managing the CPU</h3>\n<p>The OS is used to run programs by clicking on an icon, selecting the program from a menu, or typing in an instruction in the command line.\nWhen the OS runs a piece of software, it has to find the program files on the storage device, load them into the main memory, and instruct the CPU to start executing the program from the beginning.\nIn each case, the OS performs the same sequence of steps:</p>\n<ol>\n<li>The program code is found on the storage device</li>\n<li>A section of RAM is reserved for the program and space is allocated for the programs data</li>\n<li>The program code is copied from storage into the reserved space in the memory</li>\n<li>The CPU program counter is set to the memory location of the first instruction in the program, and execution begins</li>\n</ol>\n<h3>Multitasking</h3>\n<p>Multi-tasking allows the user to perform multiple computer tasks simultaneously, via scheduling the priority of processes.\nBy giving the processor a small time slice for each task, this means all tasks appear to work simultaneously.\nTo the user, it appears that we can multitask.\nIn reality, resources such as memory and the processor are being shared between tasks.</p>\n<p>There are different types of scheduling</p>\n<ul>\n<li>Round robin</li>\n<li>First Come First Served</li>\n<li>Shortest Job First</li>\n<li>Shortest time remaining</li>\n<li>Multi-level</li>\n</ul>\n<p>The scheduler ensures that the computer:</p>\n<ul>\n<li>Processes as many tasks as possible in a given time</li>\n<li>Makes maximum use of the CPU time</li>\n<li>It will try to minimise latency between the action and the reaction</li>\n<li>Makes use of resources</li>\n<li>Can prioritise jobs</li>\n<li>No task is left uncompleted for too long</li>\n<li>Can alter priorities</li>\n</ul>\n<p>The scheduler is part of the operating system within the kernel.</p>\n<h3>Multi-user Operating Systems</h3>\n<p>A multi-user operating system allows multiple clients to access a more powerful computer via a network.\nThis may be via a thin client.\nThe thin client only acts as a terminal to access the larger computer.</p>\n<p>Multi-user operating systems:</p>\n<ul>\n<li>Can allocate resources between users</li>\n<li>Can give each user a workspace</li>\n<li>Works out how to efficiently distribute CPU time between users</li>\n<li>Allows for updates in software and security updates to be easily updated on a single computer</li>\n</ul>\n<h3>Distributed Operating Systems</h3>\n<p>A distributed operating system is an operating system that controls multiple computers simultaneously to perform a single task.\nEach computer contains it's own OS, and a group of computers are a 'cluster'.</p>\n<p>One use of such an operating system is for rendering video.\nA ficticious media company may use such an operating system to render a video in a shorter time span, as the workload is distributed.</p>\n<h3>Real Time Operating Systems (RTOS)</h3>\n<p>A real time operating system is an operating system which handles data in real time.\nFor example, a set of traffic lights will need an RTOS to handle when a pedestrian presses the button.</p>\n<p>Such an interruption is called an interrupt.\nWhen multiple interrupts occur simultaneously, the interrupts can be prioritised.</p>\n<p>Uses case scenarios include:</p>\n<ul>\n<li>Air Traffic Control</li>\n<li>Robotics</li>\n<li>Weapon guidance systems</li>\n<li>Medical diagnostic systems</li>\n</ul>\n<h3>Embedded Operating Systems</h3>\n<p>Embedded Operating systems are bespoke operating systems that only performs a single category of tasks.\nAll the software is integrated and designed for the one specific board.</p>\n<p>Scenarios where such an OS is used include:</p>\n<ul>\n<li>POS systems</li>\n<li>ATM systems</li>\n<li>Set-top box</li>\n<li>DVD player</li>\n<li>Cars</li>\n<li>Television</li>\n<li>Network Switch</li>\n</ul>\n<h3>Batch Operating Systems</h3>\n<p>A batch operating system processes tasks in 'batches'.\nData is collected over time, and processed all in one go.</p>\n<p>Such an operating system is required for repetitive data processing.</p>\n<p>For example, a monthly kitty cat litter clean up service will need to process their invoices at the end of each month.\nThis will need to be processed at the end of the month, as customers could purchase any time during the month.</p>\n<p>Batch processing is different to real time processing.</p>\n<h3>Online Operating System</h3>\n<p>An online operating system is an operating system that requires the use of online software.\nGoogle Chrome's ChromeOS is such an example.</p>\n<p>Programs are not stored locally, but are instead found online.</p>\n<h3>Peripheral Management</h3>\n<p>Operating systems manage the way in which hardware interacts with the software\nA peripheral is a piece of hardware that is not connected directly to the CPU, such as a keyboard, a mouse, a HDD, etc.\nAn OS manages all of these peripherals.</p>\n<p>On Linux, one may use <code>lspci</code> and <code>lsusb</code> to view some of the peripheral devices connected to the PCI lanes and the USB bus.</p>\n<h3>Drivers</h3>\n<p>Drivers are a piece of software used to control a piece of hardware.\nDrivers allow a peipheral device to be connected to a computer and it be used by an Operating System.</p>\n<ul>\n<li>You may get graphics cards, mouse, sound card, NIC, printers, camera, etc.</li>\n<li>Drivers are OS specific, and are regularly updated by companies</li>\n</ul>\n<h3>File Management</h3>\n<p>Like memory management, the Operating System must identify where files are stored for long time storage on the storage medium.\nThe user does not need to know the track, sector and/or surface address, but the Operating System does in order to accurately locate a file on the hard drive.</p>\n<h3>Permissions</h3>\n<p>The Operating System also keeps permissions, which keeps the computer and files stored on it safe.\nEach user is given certain permissions to perform actions.</p>\n<p>A student named <code>Alex</code> may have their user home directory with <code>alex:student</code> permissions.\nAll teachers will be able to read the <code>/home/alex</code> directory, while other students cannot.</p>\n<p>Examples of the most typical permissions include:</p>\n<ul>\n<li>Read</li>\n<li>Write</li>\n<li>Execute: <code>chmod +x file.sh</code></li>\n</ul>\n<h3>User Interface</h3>\n<p>A user interface is the method of controlling a computer.</p>\n<h4>Command Line Interface</h4>\n<p>Text Based</p>\n<p>Examples include:</p>\n<ul>\n<li>DOS</li>\n<li>Windows Command Prompt</li>\n<li>GNU Bash</li>\n</ul>\n<div class=\"to-vscode\">\n+ Much more powerful\n+ Uses less RAM\n+ Does not use much processing to draw the graphics\n+ Low resolutions supported\n+ Heavily documented (with `man` command on Linux, or `/?`, `-?`, `--help` flags)\n- Can be confusing\n- There are a lot of commands to remember.\n- Commands must be typed correctly\n- Mistyping will require hours of arrow button pressing fun\n</div>\n<h4>Graphical User Interface</h4>\n<p>Contains windows, icons, menus and pointers (WIMP)</p>\n<p>Examples include:</p>\n<ul>\n<li>Microsoft Windows</li>\n<li>KDE Plasma 5</li>\n<li>GNOME 3</li>\n<li>Unity</li>\n</ul>\n<div class=\"to-vscode\">\n+ A WIMP interface is easy to interact with\n+ No complicated commands to remember\n+ Icons can represent what an action may perform\n- Requires more processing power to render graphics instead of text\n</div>\n<h4>Menu Driven Interface</h4>\n<p>A menu driven interface is an interface designed with a hierachy of menus.</p>\n<div class=\"to-vscode\">\n+ Extemely easy to use\n+ No commands to learn\n+ Menu interfaces can be visual or spoken\n+ Menus are labelled with intuitive commands\n+ Low processing power required\n- May have heavily nested menus and hard to navigate\n- May be hard to use if designed badly\n</div>\n<h4>Speech Interface</h4>\n<p>A speech driven interface which recognises what the user says, and performs an action based on the input.</p>\n<div class=\"to-vscode\">\n+ No user training required\n+ Flexible\n+ Remote input method\n+ Suitable for handicapped people\n- Unreliable\n- Requires voice recognition software, which is hard to program\n</div>\n<h1>Questions</h1>\n<ol>\n<li>Explain what is meant by system software</li>\n<li>Explain what is meant by application software</li>\n<li>What is general purpose software and discuss the pros and cons associated to it</li>\n<li>What is special purpose application software and discuss the pros and cons associated to it</li>\n<li>What is bespoke application software and discuss the pros and cons associated to it</li>\n<li>Complete the attributes column of the table below</li>\n</ol>\n<table>\n<thead>\n<tr>\n<th>Type</th>\n<th>Use</th>\n<th>Attributes</th>\n<th>Why this type of software is more appropriate for use specified compared to the alternatives</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Word processing application</td>\n<td>Writing reports, memos, letters to customers</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>Spreadsheet application</td>\n<td>Keeping simple company accounts, calculating employee commission payments, simple stock control system, modelling</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>Database application</td>\n<td>Keeping customer records, sales records, appointments system</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>Desktop publishing application</td>\n<td>Creating leaflets, posters, business cards</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>Presentation software</td>\n<td>Creating presentations to show to customers or staff</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>Graphics application</td>\n<td>Manipulating images that can be used at home, school or a business</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>Web design application</td>\n<td>Creating personal or business websites</td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>","frontmatter":{"pagename":"4.6.1 Hardware and software"},"fields":{"filename":"4-6-1"}}},"pageContext":{"permalink":"/7517/4-6-1"}}