{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["Homepage","render","pages","this","props","data","allMarkdownRemark","edges","forEach","page","node","fields","category","react__WEBPACK_IMPORTED_MODULE_4___default","a","createElement","_components_DocsLayout__WEBPACK_IMPORTED_MODULE_6__","_components_Global__WEBPACK_IMPORTED_MODULE_5__","map","bot","key","permalink","href","frontmatter","pagename","src","alt","React","Component","pageQuery"],"mappings":"uPAKqBA,4FACnBC,kBACE,IAAMC,EAAQC,KAAKC,MAAMC,KAAKC,kBAAkBC,MAOhD,OAJAL,EAAMM,QAAQ,SAACC,GACFA,EAAKC,KAAKC,OAAOC,WAI5BC,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACE,EAAA,EAAD,MACAJ,EAAAC,EAAAC,cAAA,iCACAF,EAAAC,EAAAC,cAAA,UACGb,EAAMgB,IAAI,SAAAC,GAAG,OACZN,EAAAC,EAAAC,cAAA,MAAIK,IAAKD,EAAIT,KAAKC,OAAOU,WAAWR,EAAAC,EAAAC,cAAA,KAAGO,KAAMH,EAAIT,KAAKC,OAAOU,WAAYF,EAAIT,KAAKa,YAAYC,cAGlGX,EAAAC,EAAAC,cAAA,KAAGO,KAAK,iGACNT,EAAAC,EAAAC,cAAA,OAAKU,IAAI,gDAAgDC,IAAI,4BAnBjCC,IAAMC,WA0B/BC,EAAS","file":"component---src-pages-index-js-17c57c60c63d8bc2a674.js","sourcesContent":["import React from 'react';\nimport Global from './../components/Global';\nimport DocsLayout from './../components/DocsLayout';\nimport { graphql } from 'gatsby';\n\nexport default class Homepage extends React.Component {\n  render() {\n    const pages = this.props.data.allMarkdownRemark.edges;\n    const categories = {};\n\n    pages.forEach((page) => {\n      categories[page.node.fields.category];\n    });\n\n    return (\n      <DocsLayout>\n        <Global />\n        <h1>Select a service...</h1>\n        <ul>\n          {pages.map(bot => (\n            <li key={bot.node.fields.permalink}><a href={bot.node.fields.permalink}>{bot.node.frontmatter.pagename}</a></li>\n          ))}\n        </ul>\n        <a href=\"https://app.netlify.com/start/deploy?repository=https://github.com/terminal/docs.terminal.ink\">\n          <img src=\"https://www.netlify.com/img/deploy/button.svg\" alt=\"Deploy to Netlify\" />\n        </a>\n      </DocsLayout>\n    );\n  }\n}\n\nexport const pageQuery = graphql`\n  {\n    allMarkdownRemark(filter: {fields: { filename: { eq: \"index\" }}}) {\n      edges {\n        node {\n          fields {\n            filename\n            permalink\n          }\n          frontmatter {\n            pagename\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}